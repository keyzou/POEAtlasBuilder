{"version":3,"file":"static/js/719.45bfe71a.chunk.js","mappings":"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","sources":["constants.ts","models/misc.ts","data/skillModifiers.ts","components/ui/ToastContainer.tsx","components/modals/ExportTreeModal.tsx","components/modals/ImportTreeModal.tsx","components/ui/Badge.tsx","components/ui/FileExplorer.tsx","components/modals/LoadTreeModal.tsx","components/modals/NotSavedConfirmationModal.tsx","components/modals/SaveTreeModal.tsx","components/TreeSummary.tsx","data/skillTreeManager.ts","pages/AtlasSkillTree.tsx","utils.ts"],"sourcesContent":["import type { FrameInfo } from 'models/misc'\nimport type TreeNode from 'models/nodes'\nimport type PassiveTree from 'models/tree'\nimport { calculateOrbitAngles } from './utils'\n\nexport const skillsPerOrbit = [1, 6, 16, 16, 40, 72, 72]\nexport const orbitAngles = calculateOrbitAngles(skillsPerOrbit)\nexport const orbitRadii = [0, 82, 162, 335, 493, 662, 846]\n\nexport const SKILL_ATLAS_WIDTH = 520\nexport const SKILL_ATLAS_HEIGHT = 520\nexport const SKILL_FRAME_WIDTH = 40\nexport const SKILL_FRAME_HEIGHT = 40\nexport const SKILL_FRAME_INNER_RADIUS = 28\nexport const NOTABLE_FRAME_WIDTH = 58\nexport const NOTABLE_FRAME_HEIGHT = 59\nexport const NOTABLE_FRAME_INNER_RADIUS = 35\nexport const KEYSTONE_FRAME_WIDTH = 84\nexport const KEYSTONE_FRAME_HEIGHT = 85\nexport const KEYSTONE_FRAME_INNER_RADIUS = 57\n\nexport const TOOLTIP_HEADER_HEIGHT = 88\n\nexport const ATLAS_TREE_POE_VERSION = 6\n\n// TODO: Move this away without causing a dependency cycle\nexport function getNodeFrameInfo(\n  node: TreeNode,\n  jsonTree: PassiveTree\n): FrameInfo {\n  if (node.isNotable)\n    return {\n      width: NOTABLE_FRAME_WIDTH,\n      height: NOTABLE_FRAME_HEIGHT,\n      innerRadius: NOTABLE_FRAME_INNER_RADIUS,\n      skillAtlas: jsonTree.skillSprites.notableInactive\n    }\n\n  if (node.isKeystone)\n    return {\n      width: KEYSTONE_FRAME_WIDTH,\n      height: KEYSTONE_FRAME_HEIGHT,\n      innerRadius: KEYSTONE_FRAME_INNER_RADIUS,\n      // TODO: UPDATE THIS\n      skillAtlas: jsonTree.skillSprites.keystoneInactive\n    }\n  return {\n    width: SKILL_FRAME_WIDTH,\n    height: SKILL_FRAME_HEIGHT,\n    innerRadius: SKILL_FRAME_INNER_RADIUS,\n    skillAtlas: jsonTree.skillSprites.normalInactive\n  }\n}\n\nexport const leagueToIconsLookup = {\n  Abyss: [\n    'AbyssNode1',\n    'AbyssNotable',\n    'AbyssNotable2',\n    'AbyssNotable3',\n    'AbyssNotable5',\n    'AbyssNotable6',\n    'WheelofDisablingAbyss'\n  ],\n  Incursion: [\n    'AlvaNode2',\n    'AlvaNotable2',\n    'AlvaNotable3',\n    'AlvaNotable4',\n    'AlvaNode',\n    'VaalNotable2',\n    'VaalNotable1'\n  ],\n  Anarchy: [\n    'Anarchy4',\n    'Anarchy5',\n    'AnarchyNotable1',\n    'AnarchyNotable2',\n    'AnarchyNode1'\n  ],\n  Ascendancy: ['Ascendancy', 'AscendancyNode'],\n  Bestiary: [\n    'BestiaryNotable1',\n    'BestiaryNotable2',\n    'BestiaryNotable3',\n    'BestiaryNotable4',\n    'BestiaryNotable5',\n    'Bestiarybosses1',\n    'Bestiarybosses2',\n    'Bestiarybosses3',\n    'Bestiarybosses4',\n    'BestiaryNode1'\n  ],\n  Beyond: ['BeyondNotable2', 'BeyondNotable3', 'BeyondNotable5', 'BeyondNode1'],\n  Blight: [\n    'BlightInjectorNotable',\n    'BlightNode1',\n    'BlightNotable1',\n    'BlightNotable2',\n    'BlightNotable3',\n    'BlightNotable4',\n    'BlightNotable5',\n    'BlightNotable6',\n    'WheelofDisablingBlight'\n  ],\n  Breach: [\n    'BreachNode2',\n    'BreachNotable2',\n    'BreachNotable3',\n    'BreachNotable4',\n    'BreachNotable5',\n    'BreachNotable6',\n    'WheelofDisablingBreach'\n  ],\n  Conqueror: [\n    'ConquerorNotable1',\n    'ConquerorNotable3',\n    'ConquerorNode1',\n    'SirusKeystone'\n  ],\n  Delirium: [\n    'DeliriumNotable1',\n    'DeliriumNotable2',\n    'DeliriumNotable3',\n    'DeliriumNotable4',\n    'DeliriumNotable5',\n    'DeliriumNotable6',\n    'DeliriumNode1',\n    'WheelofDisablingDelirium'\n  ],\n  Delve: [\n    'DelveNotable1',\n    'DelveNotable2',\n    'DelveNotable3',\n    'DelveNotable4',\n    'DelveNotable6',\n    'DelveNode',\n    'DelveNode2'\n  ],\n  'Elder/Shaper': [\n    'ElderShaperNotable1',\n    'ElderShaperNotable2',\n    'ElderShaperNotable3',\n    'ElderShaperNode1',\n    'ShaperAndElderKeystone'\n  ],\n  Essence: [\n    'EssenceNode2',\n    'EssenceNotable1',\n    'EssenceNotable2',\n    'EssenceNotable3'\n  ],\n  Expedition: [\n    'ExpeditionNode1',\n    'ExpeditionNotable1',\n    'ExpeditionNotable2',\n    'ExpeditionNotable3',\n    'WheelofDisablingExpedition'\n  ],\n  Domination: ['GreedShrinenoteble', 'Shrines', 'ShrinesNode'],\n  Harbinger: ['HarbingerNode1', 'HarbingerNotable1', 'HarbingerNotable3'],\n  Harvest: [\n    'HarvestNode',\n    'HarvestNotable1',\n    'HarvestNotable2',\n    'HarvestNotable3',\n    'HarvestNotable6',\n    'WheelofDisablingHarvest'\n  ],\n  Heist: [\n    'HeistNotable1',\n    'HeistNotable2',\n    'HeistRobot',\n    'HeistNode1',\n    'WheelofDisablingHeist'\n  ],\n  Betrayal: [\n    'JunNode1',\n    'JunNode2',\n    'JunNotable1',\n    'JunNotable2',\n    'JunNotable4',\n    'JunNotable5',\n    'JunNotable6'\n  ],\n  Kirac: [\n    'KiracNode',\n    'KiracNotable1',\n    'KiracNotable2',\n    'KiracNotable3',\n    'KiracNotable4'\n  ],\n  Legion: [\n    'LegionNotable1',\n    'LegionNotable2',\n    'LegionNotable3',\n    'LegionNotable4',\n    'LegionNotable5',\n    'LegionNotable6',\n    'LegionNode1',\n    'WheelofDisablingLegion'\n  ],\n  Maps: [\n    'UniqueMaps',\n    'Mapnode',\n    'ItemQuantity',\n    'ItemQuantityandRarity',\n    'ModifierTier',\n    'UniqueMapsNode',\n    'BossMapDrops',\n    'Mapnotable1',\n    'Mapnotable2',\n    'Mapnotable3',\n    'Mapnotable4',\n    'MapDuplication',\n    'ShadowShaping',\n    'DanceofDestructKeystone',\n    'TwistOfFateKeystone',\n    'SingularFocusKeystone',\n    'StreamOfConsciousnessKeystone',\n    'WellspringofCreationKeystone'\n  ],\n  Misc: [\n    'WanderingPathKeystone',\n    'EldritchGazeKeystone',\n    'GrandDesignKeystone',\n    'UnspeakableHorrorKeystone',\n    'WrathOfTheCosmosKeystone'\n  ],\n  'Map Bosses': ['MapBossnode', 'MapBossnotable1', 'MapBossnotable2'],\n  Rare: ['RareMonstersnode', 'RareMonstersnotable', 'ValleyofDarkness'],\n  Metamorph: [\n    'MetamorphNode1',\n    'MetamorphNotable1',\n    'MetamorphNotable2',\n    'MetamorphNotable3',\n    'MetamorphNotable4',\n    'MetamorphNotable6',\n    'WheelofDisablingMetamorph'\n  ],\n  Ritual: [\n    'Ritual',\n    'RitualNode1',\n    'RitualNotable1',\n    'RitualNotable2',\n    'WheelofDisablingRitual'\n  ],\n  Scarabs: ['ScarabNotable1', 'ScarabNode1'],\n  Sextants: ['Sextantnotable1', 'Sextantnode1'],\n  Ambush: [\n    'StrongboxNode1',\n    'StrongboxCelestial',\n    'StrongboxCurrency',\n    'StrongboxDiviner',\n    'StrongboxNotable1',\n    'StrongboxNotable2',\n    'StrongboxScarab'\n  ],\n  Synthesis: [\n    'SynthesisNotable1',\n    'SynthesisNotable2',\n    'SynthesisNotable3',\n    'SynthesisNode1',\n    'CortexKeystone'\n  ],\n  'The Searing Exarch': [\n    'TheCleansingFireNode',\n    'TheCleansingFire1',\n    'TheCleansingFire2',\n    'TheCleansingFire3',\n    'TheCleansingFire4',\n    'SearingExarchKeystone'\n  ],\n  'The Maven': [\n    'TheMaven1',\n    'TheMaven2',\n    'TheMavenNode',\n    'UberMavenKeystone',\n    'CaptivatedInterestKeystone'\n  ],\n  'The Eater of Worlds': [\n    'TheTangle1',\n    'TheTangle2',\n    'TheTangle3',\n    'TheTangle4',\n    'TheTangleNode',\n    'EaterOfWorldsKeystone'\n  ],\n  Torment: ['TormentNode1', 'TormentNotable1'],\n  Vaal: ['Vaalsideareas', 'VaalsideareasNode']\n}\n","import type SkillAtlas from './sprite'\n\nexport enum State {\n  DEFAULT = 0,\n  INTERMEDIATE = 1,\n  ACTIVE = 2\n}\n\nexport interface FrameInfo {\n  width: number\n  height: number\n  innerRadius: number\n  skillAtlas: SkillAtlas[]\n}\n","import TreeNode from 'models/nodes'\n\nexport type Modifiers = Record<string, { value: number; source?: string }>\nexport type LeagueGroupedModifiers = Record<string, Modifiers>\ntype ModifierCallback = (\n  node: TreeNode,\n  modifiers: LeagueGroupedModifiers\n) => LeagueGroupedModifiers\n\nexport enum GlobalModifiers {\n  GRAND_DESIGN1 = 'Your Maps have #% increased Pack Size',\n  GRAND_DESIGN2 = '# Small Atlas Passive Skills grant nothing',\n  WANDERING_PATH = '# Notable Atlas Passive Skills grant nothing'\n}\n\n/**\n * Grand Design:\n *   - Small Atlas Passive Skills grant nothing\n *   - Your Maps have 1% increased Pack Size per Allocated Notable Atlas Passive Skill\n * @param node Node to apply the keystone on\n * @param modifiers Modifiers coming from the node\n * @returns Modifiers coupled with the keystone new modifiers\n */\nconst applyGrandDesign: ModifierCallback = (node, modifiers) => {\n  const updatedMaps: Modifiers = {}\n  const updatedMisc: Modifiers = {}\n  if (node.isStartPoint) return {}\n  if (!node.isNotable && !node.isKeystone) {\n    updatedMisc[GlobalModifiers.GRAND_DESIGN2] = {\n      value: 1,\n      source: 'Grand Design'\n    }\n    const groupedModifiers: LeagueGroupedModifiers = {\n      Misc: {\n        ...updatedMisc\n      }\n    }\n    return groupedModifiers\n  }\n  if (node.name === 'Grand Design') return {}\n  updatedMaps[GlobalModifiers.GRAND_DESIGN1] = {\n    value: node.isNotable ? 1 : 0,\n    source: 'Grand Design'\n  }\n  return {\n    ...modifiers,\n    Maps: {\n      ...modifiers['Maps'],\n      ...updatedMaps\n    }\n  }\n}\n\n/**\n * Wandering Path:\n *   - Notable Atlas Passive Skills grant nothing\n *   - 100% increased effect of Small Atlas Passive Skills\n * @param node Node to apply the keystone on\n * @param modifiers Modifiers coming from the node\n * @returns Modifiers coupled with the keystone new modifiers\n */\nconst applyWanderingPath: ModifierCallback = (node, modifiers) => {\n  if (node.isStartPoint) return {}\n  const updatedMisc: Modifiers = {}\n  if (node.isNotable) {\n    updatedMisc[GlobalModifiers.WANDERING_PATH] = {\n      value: 1,\n      source: 'Wandering Path'\n    }\n    const groupedModifiers: LeagueGroupedModifiers = {\n      Misc: {\n        ...updatedMisc\n      }\n    }\n    return groupedModifiers\n  }\n  if (node.name === 'Wandering Path') {\n    const effectKey = Object.keys(modifiers['Misc'])[1]\n    const effectValue = Object.values(modifiers['Misc'])[1]\n    const effect: Modifiers = {}\n    effect[effectKey] = { ...effectValue, source: 'Wandering Path' }\n    return {\n      Misc: {\n        ...effect\n      }\n    }\n  }\n  if (node.isKeystone) return modifiers\n  for (const [league, mods] of Object.entries(modifiers)) {\n    for (const modName of Object.keys(mods)) {\n      if (Object.values<string>(GlobalModifiers).includes(modName)) continue\n      modifiers[league][modName].value *= 2\n    }\n  }\n  return modifiers\n}\n\nexport const GLOBAL_SKILL_MODIFIER_LOOKUP: Record<string, ModifierCallback> = {\n  38059: applyGrandDesign,\n  40658: applyWanderingPath\n}\n","import React from 'react'\nimport { Toast } from 'react-hot-toast'\nimport { FaCheck, FaInfo, FaTimes } from 'react-icons/fa'\n\ninterface Props {\n  t: Toast\n  message: React.ReactNode\n  title?: React.ReactNode\n  variant?: 'success' | 'error' | 'default'\n}\n\nconst ToastContainer: React.FC<Props> = ({\n  t,\n  message,\n  variant = 'default',\n  title\n}) => {\n  const getTitle = React.useCallback(() => {\n    if (title) return title\n    if (variant === 'success') return 'Success !'\n    if (variant === 'error') return 'Oops !'\n    return 'Hey !'\n  }, [variant, title])\n\n  const getBgClasses = React.useCallback(() => {\n    if (variant === 'success') return 'bg-green-900'\n    if (variant === 'error') return 'bg-red-900'\n    return 'bg-zinc-800'\n  }, [variant])\n\n  const getMessageClasses = React.useCallback(() => {\n    if (variant === 'success') return 'text-green-100'\n    if (variant === 'error') return 'text-red-100'\n    return 'text-gray-300'\n  }, [variant])\n\n  const getTitleClasses = React.useCallback(() => {\n    if (variant === 'success') return 'text-white'\n    if (variant === 'error') return 'text-white'\n    return 'text-orange-400'\n  }, [variant])\n\n  const getIconClasses = React.useCallback(() => {\n    if (variant === 'success') return 'bg-green-600 text-green-100'\n    if (variant === 'error') return 'bg-red-600 text-red-100'\n    return 'bg-zinc-600 text-zinc-300'\n  }, [variant])\n\n  return (\n    <div\n      className={`${\n        t.visible ? 'animate-enter' : 'animate-leave'\n      } pointer-events-auto flex w-full max-w-md rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 ${getBgClasses()}`}\n    >\n      <div className='flex items-start'>\n        <div className='ml-5 mr-3 flex h-full items-center justify-center'>\n          <span\n            className={`flex items-center justify-center rounded-full p-2 text-sm ${getIconClasses()}`}\n          >\n            {variant === 'default' && <FaInfo />}\n            {variant === 'success' && <FaCheck />}\n            {variant === 'error' && <FaTimes />}\n          </span>\n        </div>\n        <div className='flex-1 p-3'>\n          <p className={`font-bold ${getTitleClasses()}`}>{getTitle()}</p>\n          <p className={`mt-1 text-sm ${getMessageClasses()}`}>{message}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ToastContainer\n","import React, { useContext } from 'react'\nimport { BsFillXCircleFill } from 'react-icons/bs'\nimport { createPortal } from 'react-dom'\nimport { BiImport } from 'react-icons/bi'\nimport { base64URLDecode, emitEvent, toUInt16, toUInt32 } from '../../utils'\nimport { ATLAS_TREE_POE_VERSION } from '../../constants'\nimport { SkillTreeContext } from 'pages/AtlasSkillTree'\nimport toast from 'react-hot-toast'\nimport ToastContainer from 'components/ui/ToastContainer'\nimport axios from 'axios'\n\ninterface ModalProps {\n  show: boolean\n  toggle: Function\n}\n\nconst ExportTreeModal: React.FC<ModalProps> = ({ show, toggle }) => {\n  const skillTreeManager = useContext(SkillTreeContext)\n\n  const onClickRaw = async (): Promise<void> => {\n    const result = skillTreeManager.exportTree()\n    await navigator.clipboard.writeText(result)\n    toast.custom(t => (\n      <ToastContainer\n        t={t}\n        variant='success'\n        message={'The tree has been exported to your clipboard !'}\n      />\n    ))\n  }\n\n  const onClickPastebin = React.useCallback(async (): Promise<void> => {\n    if (!process.env.REACT_APP_PASTEBIN_API_KEY) {\n      toast.custom(t => (\n        <ToastContainer\n          t={t}\n          variant='error'\n          message={'No Pastebin API key found :('}\n        />\n      ))\n      return\n    }\n    const result = skillTreeManager.exportTree()\n    const formData = new URLSearchParams()\n    formData.append('api_dev_key', process.env.REACT_APP_PASTEBIN_API_KEY)\n    formData.append('api_paste_code', result)\n    formData.append('api_paste_private', '0')\n    formData.append(\n      'api_paste_name',\n      skillTreeManager.name ?? 'Untitled atlas tree'\n    )\n    formData.append('api_paste_expire_date', 'N')\n    const response = await axios.postForm(\n      'https://pastebin.com/api/api_post.php',\n      formData\n    )\n\n    console.log(response.data)\n  }, [skillTreeManager])\n\n  return show\n    ? createPortal(\n        <div className='fixed top-0 left-0 z-30 flex  h-screen w-screen items-center justify-center'>\n          <div\n            className='fixed left-0 top-0 z-30 flex  h-screen w-full items-center justify-center bg-black bg-opacity-50'\n            onClick={() => toggle()}\n            role='none'\n          />\n          <div className='absolute z-40 flex w-[32rem] flex-col rounded-xl bg-zinc-900 text-slate-300'>\n            <h2 className='mb-7 w-full px-5 py-5 text-center text-2xl font-bold text-orange-400'>\n              Export a tree\n            </h2>\n            <div className='mb-10 flex items-center justify-center'>\n              <button\n                type='button'\n                onClick={onClickRaw}\n                className='mr-3 cursor-pointer rounded border-2 border-zinc-800 py-1 px-7 font-bold text-zinc-500 hover:bg-stone-800 hover:text-orange-400'\n              >\n                Copy Raw Tree\n              </button>\n              <button\n                type='button'\n                onClick={onClickPastebin}\n                className='mr-3 cursor-pointer rounded border-2 border-zinc-800 py-1 px-7 font-bold text-zinc-500 hover:bg-stone-800 hover:text-orange-400'\n              >\n                Copy Pastebin link\n              </button>\n            </div>\n          </div>\n        </div>,\n        document.body\n      )\n    : null\n}\n\nexport default ExportTreeModal\n","import React from 'react'\nimport { BsFillXCircleFill } from 'react-icons/bs'\nimport { createPortal } from 'react-dom'\nimport { BiImport } from 'react-icons/bi'\nimport {\n  base64URLDecode,\n  emitEvent,\n  importTree,\n  toUInt16,\n  toUInt32\n} from '../../utils'\nimport { ATLAS_TREE_POE_VERSION } from '../../constants'\nimport { useParams } from 'react-router'\nimport toast from 'react-hot-toast'\nimport ToastContainer from 'components/ui/ToastContainer'\n\ninterface ModalProps {\n  show: boolean\n  toggle: Function\n}\n\nconst ImportTreeModal: React.FC<ModalProps> = ({ show, toggle }) => {\n  const [showError, setShowError] = React.useState<string>()\n  const [textareaText, setTextareaText] = React.useState<string>()\n\n  const onHandleChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement>\n  ): void => {\n    setTextareaText(event.target.value)\n  }\n\n  const onHandleImport = (encodedTree?: string): void => {\n    if (!encodedTree) return\n    try {\n      importTree(encodedTree)\n      toast.custom(t => (\n        <ToastContainer\n          t={t}\n          variant='success'\n          message='The tree has been imported.'\n        />\n      ))\n    } catch (error: unknown) {\n      toast.custom(t => (\n        <ToastContainer\n          t={t}\n          variant='error'\n          message={(error as Error).message}\n        />\n      ))\n    }\n  }\n\n  return show\n    ? createPortal(\n        <div className='fixed top-0 left-0 z-30 flex  h-screen w-screen items-center justify-center'>\n          <div\n            className='fixed left-0 top-0 z-30 flex  h-screen w-full items-center justify-center bg-black bg-opacity-50'\n            onClick={() => toggle()}\n            role='none'\n          />\n          <div className='absolute z-40 flex w-1/2 flex-col rounded-xl bg-zinc-900 px-5 py-5 text-slate-300'>\n            <h2 className='mb-7 w-full text-center text-2xl font-bold text-orange-400'>\n              Import a tree\n            </h2>\n\n            {showError && (\n              <div className='mb-5 flex items-center rounded bg-red-700 bg-opacity-10 px-5 py-3  text-red-500'>\n                <BsFillXCircleFill className='mr-3 text-2xl' />\n                <div className='flex flex-col'>\n                  <span className='font-bold'>Oops !</span>\n                  <span className='text-sm text-red-200'>{showError}</span>\n                </div>\n              </div>\n            )}\n            <p className='mb-3 text-sm font-bold text-zinc-400'>\n              Use the following area to paste your encoded tree:\n            </p>\n            <textarea\n              onChange={onHandleChange}\n              name='import'\n              className='mb-5 h-72 w-full flex-grow resize-none rounded bg-zinc-800 p-3 text-xs text-zinc-500 focus:outline-none'\n            />\n            <div className='flex justify-end'>\n              <button\n                type='button'\n                onClick={() => toggle()}\n                className='mr-3 cursor-pointer rounded border-2 border-zinc-800 py-1 px-7 font-bold text-zinc-500 hover:bg-stone-800 hover:text-orange-400'\n              >\n                Close\n              </button>\n              <button\n                type='submit'\n                onClick={() => onHandleImport(textareaText)}\n                disabled={!textareaText}\n                className='flex cursor-pointer items-center rounded bg-lime-900 py-1 pr-10 pl-8 font-bold text-lime-500 hover:bg-lime-800 hover:text-lime-400 disabled:cursor-not-allowed disabled:opacity-40'\n              >\n                <BiImport className='mr-2 inline' />\n                Import\n              </button>\n            </div>\n          </div>\n        </div>,\n        document.body\n      )\n    : null\n}\n\nexport default ImportTreeModal\n","import React from 'react'\n\ntype Props = {\n  size?: 'sm' | 'md' | 'lg'\n  children: React.ReactNode | React.ReactNode[]\n} & React.HTMLProps<HTMLSpanElement>\n\nexport const Badge: React.FC<Props> = ({\n  size = 'md',\n  children,\n  className\n}) => {\n  return (\n    <span\n      className={`rounded py-0.5 px-2.5 text-xs font-semibold ${className}`}\n      children={children}\n    />\n  )\n}\n","import { SkillTreeDirectory } from 'data/skillTreeManager'\nimport React from 'react'\nimport { FaArrowUp, FaFolder, FaSitemap } from 'react-icons/fa'\nimport { getFromPath, setFromPath, useOutsideClick } from 'utils'\nimport { Badge } from './Badge'\n\ninterface Props {\n  initialDir: SkillTreeDirectory\n  onSelectItem: Function\n  onPathChange: Function\n}\n\nconst FileExplorer: React.FC<Props> = ({\n  initialDir,\n  onSelectItem,\n  onPathChange\n}) => {\n  const [selectedItem, setSelectedItem] = React.useState<string>()\n  const filesWrapper = React.useRef(null)\n  const [isCreating, setCreating] = React.useState<boolean>(false)\n  const [folderName, setFolderName] = React.useState<string>()\n\n  const selectedClasses = 'bg-slate-700 hover:bg-slate-600'\n  const defaultClasses = 'hover:bg-zinc-700'\n  const selectedIconClasses = 'text-sky-500'\n  const defaultIconClasses = 'text-zinc-600 group-hover:text-sky-500'\n\n  const folderPrefix = '__dir__'\n\n  const [currentPath, _setCurrentPath] = React.useState<string[]>([])\n  const [currentView, setCurrentView] = React.useState<SkillTreeDirectory>({})\n\n  React.useEffect(() => setCurrentView(initialDir), [initialDir])\n\n  const setCurrentPath = React.useCallback(\n    (path: string[]) => {\n      _setCurrentPath(path)\n      onPathChange(path)\n    },\n    [_setCurrentPath, onPathChange]\n  )\n\n  useOutsideClick(filesWrapper, () => {\n    setSelectedItem(undefined)\n  })\n  const onClickFolder = (folderName: string, event: React.MouseEvent) => {\n    if (event.detail === 1 && folderName !== '..') {\n      setSelectedItem(folderName)\n      return\n    }\n    let newPath\n    if (folderName === '..') {\n      newPath = currentPath.slice(0, currentPath.length - 2)\n    } else {\n      newPath = [...currentPath, folderName]\n    }\n    setCurrentPath(newPath)\n    const newView = getFromPath<SkillTreeDirectory>(initialDir, newPath)\n    setCurrentView(newView)\n  }\n\n  const onClickTree = (treeName: string, event: React.MouseEvent) => {\n    setSelectedItem(treeName)\n    if (!treeName) return\n    onSelectItem(treeName)\n  }\n  const onClickDelete = () => {\n    if (!selectedItem) return\n    let path = currentPath\n    if (!path) path = []\n    setFromPath(initialDir, [...path, selectedItem])\n    localStorage.setItem('saved-trees', JSON.stringify(initialDir))\n    const newView = { ...currentView }\n    delete newView[selectedItem]\n    setCurrentView(newView)\n  }\n\n  const onClickCreate = () => {\n    if (!folderName) return\n    setFromPath(initialDir, [...currentPath, folderPrefix + folderName], {})\n    setFolderName('')\n    localStorage.setItem('saved-trees', JSON.stringify(initialDir))\n  }\n\n  const onClickNewFolder = () => {\n    setCreating(true)\n  }\n\n  return (\n    <>\n      <div className='mb-3 flex'>\n        <button\n          type='button'\n          onClick={onClickNewFolder}\n          className='mr-2 cursor-pointer rounded bg-zinc-800 py-1 px-5 text-sm font-medium text-zinc-300 hover:bg-stone-800 hover:text-orange-400 disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:bg-zinc-800 disabled:hover:text-zinc-500'\n        >\n          New Folder\n        </button>\n        <button\n          type='button'\n          onClick={onClickDelete}\n          className='cursor-pointer rounded bg-zinc-800 py-1 px-5 text-sm font-medium text-zinc-300 hover:bg-stone-800 hover:text-orange-400 disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:bg-zinc-800 disabled:hover:text-zinc-300'\n          disabled={!selectedItem}\n        >\n          Delete\n        </button>\n      </div>\n      {isCreating && (\n        <div className='mb-3'>\n          <div className='mt-5 flex items-center'>\n            <label htmlFor='folderName' className='mr-3 text-sm font-medium'>\n              Folder name\n            </label>\n            <input\n              type='text'\n              value={folderName}\n              onChange={event => {\n                setFolderName(event.target.value)\n              }}\n              className='flex-grow rounded bg-zinc-800 px-2.5 py-1.5 text-sm placeholder:text-zinc-500 focus-visible:outline-none focus-visible:ring-0'\n            />\n            <button\n              type='button'\n              onClick={onClickCreate}\n              disabled={!folderName || currentView.hasOwnProperty(folderName)}\n              className='ml-3 flex cursor-pointer items-center rounded bg-lime-900 py-1.5 px-5 text-sm font-bold text-lime-100 hover:bg-lime-800 hover:text-lime-100 disabled:cursor-not-allowed disabled:opacity-40'\n            >\n              Create\n            </button>\n          </div>\n          {folderName && currentView.hasOwnProperty(folderName) && (\n            <span className='mt-3 block text-xs text-red-500'>\n              Folder already exists\n            </span>\n          )}\n        </div>\n      )}\n      <div className='flex items-center rounded-t bg-black bg-opacity-30  px-3 py-2'>\n        {currentPath.length === 0 && (\n          <span className='mr-2 flex-grow select-none text-sm font-bold text-zinc-600'>\n            /\n          </span>\n        )}\n        <div className='flex flex-grow'>\n          {currentPath.map(path => (\n            <div key={path} className='flex items-center'>\n              <span className='mr-2 select-none text-sm font-bold text-zinc-600 first:ml-0'>\n                /\n              </span>\n              <p className='mr-2 text-sm font-medium text-zinc-300'>\n                {path.replace(folderPrefix, '')}\n              </p>\n            </div>\n          ))}\n        </div>\n        {currentPath.length > 0 && (\n          <button\n            onClick={e => onClickFolder('..', e)}\n            type='button'\n            className='cursor-pointer rounded p-1.5 text-sm text-zinc-400 hover:bg-zinc-800'\n          >\n            <FaArrowUp />\n          </button>\n        )}\n      </div>\n      <div className='rounded-b bg-zinc-800'>\n        <ul ref={filesWrapper}>\n          {Object.entries(currentView).length === 0 && (\n            <span className='block w-full py-3 text-center italic'>Empty</span>\n          )}\n          {Object.entries(currentView)\n            .filter(([, type]) => !Array.isArray(type))\n            .map(([buildName]) => (\n              <li\n                key={`${currentPath.join('-')}-${buildName}`}\n                className={`group flex items-center px-3 py-2 hover:cursor-pointer ${\n                  selectedItem === buildName ? selectedClasses : defaultClasses\n                }`}\n                onClick={e => onClickFolder(buildName, e)}\n              >\n                <FaFolder\n                  className={`mr-3 text-sm ${\n                    selectedItem === buildName\n                      ? selectedIconClasses\n                      : defaultIconClasses\n                  }`}\n                />\n                <span className='flex-grow text-sm'>\n                  {buildName.replace(folderPrefix, '')}\n                </span>\n              </li>\n            ))}\n          {Object.entries(currentView)\n            .filter(([, type]) => Array.isArray(type))\n            .map(([buildName, allocated]) => (\n              <li\n                key={`${currentPath.join('-')}-${buildName}`}\n                className={`group flex items-center px-3 py-2 hover:cursor-pointer ${\n                  selectedItem === buildName ? selectedClasses : defaultClasses\n                }`}\n                onClick={e => onClickTree(buildName, e)}\n              >\n                {Array.isArray(allocated) && (\n                  <FaSitemap\n                    className={`mr-3 text-sm ${\n                      selectedItem === buildName\n                        ? selectedIconClasses\n                        : defaultIconClasses\n                    }`}\n                  />\n                )}\n                <span className='flex-grow text-sm'>{buildName}</span>\n                {Array.isArray(allocated) && (\n                  <Badge className='bg-sky-800 text-sky-100'>\n                    {allocated.length} points\n                  </Badge>\n                )}\n              </li>\n            ))}\n        </ul>\n      </div>\n    </>\n  )\n}\n\nexport default FileExplorer\n","import React from 'react'\nimport { createPortal } from 'react-dom'\nimport { SkillTreeDirectory } from '../../data/skillTreeManager'\nimport { FaFileImport } from 'react-icons/fa'\nimport { SkillTreeContext } from '../../pages/AtlasSkillTree'\nimport FileExplorer from 'components/ui/FileExplorer'\nimport { emitEvent, getFromPath } from 'utils'\n\ninterface ModalProps {\n  show: boolean\n  toggle: Function\n  callback?: Function\n}\n\nconst LoadTreeModal: React.FC<ModalProps> = ({ show, toggle, callback }) => {\n  const [treeName, setTreeName] = React.useState<string>('')\n  const [currentPath, setCurrentPath] = React.useState<string[]>([])\n  const skillTreeManager = React.useContext(SkillTreeContext)\n\n  const savedBuilds = React.useMemo<SkillTreeDirectory>(() => {\n    let savesStr = localStorage.getItem('saved-trees')\n    if (!savesStr) savesStr = '{}'\n    const saves = JSON.parse(savesStr)\n    return saves\n  }, [])\n\n  const onSelectItem = (treeName: string): void => {\n    setTreeName(treeName)\n  }\n\n  const onPathChange = (path: string[]): void => {\n    setCurrentPath(path)\n  }\n\n  const onClickLoad = () => {\n    const tree = getFromPath<number[]>(savedBuilds, [...currentPath, treeName])\n    emitEvent('import-tree', tree)\n    skillTreeManager.name = treeName\n    skillTreeManager.path = currentPath\n    skillTreeManager.initialAllocated = tree\n    toggle()\n  }\n\n  return show\n    ? createPortal(\n        <div className='fixed top-0 left-0 z-30 flex  h-screen w-screen items-center justify-center'>\n          <div\n            className='fixed left-0 top-0 z-30 flex  h-screen w-full items-center justify-center bg-black bg-opacity-50'\n            onClick={() => toggle()}\n            role='none'\n          />\n          <div className='absolute z-40 flex w-1/3 flex-col rounded-xl bg-zinc-900 px-5 py-5 text-slate-300'>\n            <h2 className='mb-7 w-full text-center text-2xl font-bold text-orange-400'>\n              Load a tree\n            </h2>\n            <div className='mb-6'>\n              <FileExplorer\n                initialDir={savedBuilds}\n                onSelectItem={onSelectItem}\n                onPathChange={onPathChange}\n              />\n            </div>\n            <div className='flex justify-end'>\n              <button\n                type='button'\n                onClick={() => toggle()}\n                className='mr-3 cursor-pointer rounded border-zinc-800 py-1.5 px-7 font-bold text-zinc-500 hover:bg-stone-800 hover:text-orange-400'\n              >\n                Close\n              </button>\n              <button\n                type='button'\n                onClick={onClickLoad}\n                disabled={!treeName}\n                className='flex cursor-pointer items-center rounded bg-lime-900 py-1 pr-10 pl-8 font-bold text-lime-100 hover:bg-lime-800 hover:text-lime-100 disabled:cursor-not-allowed disabled:opacity-40'\n              >\n                <FaFileImport className='mr-2 inline' />\n                Load\n              </button>\n            </div>\n          </div>\n        </div>,\n        document.body\n      )\n    : null\n}\n\nexport default LoadTreeModal\n","import React from 'react'\nimport { createPortal } from 'react-dom'\n\ninterface ModalProps {\n  show: boolean\n  toggle: Function\n  onSaveCallback: Function\n  onDiscardCallback: Function\n}\n\nconst NotSavedConfirmationModal: React.FC<ModalProps> = ({\n  show,\n  toggle,\n  onSaveCallback,\n  onDiscardCallback\n}) => {\n  const onClickDiscard = () => {\n    toggle()\n    onDiscardCallback()\n  }\n\n  const onClickSave = () => {\n    toggle()\n    onSaveCallback(onDiscardCallback)\n  }\n\n  return show\n    ? createPortal(\n        <div className='fixed top-0 left-0 z-30 flex  h-screen w-screen items-center justify-center'>\n          <div\n            className='fixed left-0 top-0 z-30 flex  h-screen w-full items-center justify-center bg-black bg-opacity-50'\n            onClick={() => toggle()}\n            role='none'\n          />\n          <div className='absolute z-40 flex w-[32rem] flex-col rounded-xl bg-zinc-900 text-slate-300'>\n            <h2 className='mb-5 w-full py-5 px-5 text-center text-2xl font-medium text-orange-400'>\n              Unsaved changes\n            </h2>\n            <p className='mb-10 px-5 text-center'>\n              Your tree has unsaved changes.\n              <br />\n              <strong>All unsaved changes will be lost !</strong>\n            </p>\n            <div className='flex justify-end rounded-b-xl bg-zinc-800 px-5 py-5'>\n              <button\n                type='button'\n                onClick={() => toggle()}\n                className='mr-3 cursor-pointer rounded border-zinc-800 py-1.5 px-7 text-sm font-bold text-zinc-500 hover:bg-stone-700 hover:text-orange-400'\n              >\n                Cancel\n              </button>\n              <button\n                type='button'\n                onClick={onClickDiscard}\n                className='mr-3 cursor-pointer rounded border-2 border-zinc-700 py-1.5 px-7 text-sm font-bold  text-red-500 hover:border-red-900 hover:border-opacity-50 hover:bg-red-900 hover:text-red-400'\n              >\n                Discard\n              </button>\n              <button\n                type='button'\n                onClick={onClickSave}\n                className='flex cursor-pointer items-center rounded bg-lime-900 px-5 text-sm font-bold text-lime-100 hover:bg-lime-800 hover:text-lime-100 disabled:cursor-not-allowed disabled:opacity-40'\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>,\n        document.body\n      )\n    : null\n}\n\nexport default NotSavedConfirmationModal\n","import React from 'react'\nimport { createPortal } from 'react-dom'\nimport { SkillTreeDirectory } from '../../data/skillTreeManager'\nimport { FaSave, FaSitemap } from 'react-icons/fa'\nimport { SkillTreeContext } from '../../pages/AtlasSkillTree'\nimport FileExplorer from 'components/ui/FileExplorer'\n\ninterface ModalProps {\n  show: boolean\n  toggle: Function\n  callback?: Function\n}\n\nconst SaveTreeModal: React.FC<ModalProps> = ({ show, toggle, callback }) => {\n  const [currentPath, setCurrentPath] = React.useState<string[]>([])\n  const [treeName, setTreeName] = React.useState<string>('')\n  const skillTreeManager = React.useContext(SkillTreeContext)\n\n  const savedBuilds = React.useMemo<SkillTreeDirectory>(() => {\n    let savesStr = localStorage.getItem('saved-trees')\n    if (!savesStr) savesStr = '{}'\n    const saves = JSON.parse(savesStr)\n    return saves\n  }, [])\n\n  const onSelectItem = (treeName: string): void => {\n    setTreeName(treeName)\n  }\n\n  const onPathChange = (path: string[]): void => {\n    setCurrentPath(path)\n  }\n\n  const handleSubmit = React.useCallback(\n    (event: React.FormEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n      skillTreeManager.name = treeName\n      skillTreeManager.path = currentPath\n      skillTreeManager.saveCurrentTree()\n\n      toggle()\n      if (callback) {\n        callback()\n      }\n    },\n    [callback, currentPath, skillTreeManager, treeName, toggle]\n  )\n\n  return show\n    ? createPortal(\n        <div className='fixed top-0 left-0 z-30 flex  h-screen w-screen items-center justify-center'>\n          <div\n            className='fixed left-0 top-0 z-30 flex  h-screen w-full items-center justify-center bg-black bg-opacity-50'\n            onClick={() => toggle()}\n            role='none'\n          />\n          <div className='absolute z-40 flex w-1/3 flex-col rounded-xl bg-zinc-900 px-5 py-5 text-slate-300'>\n            <h2 className='mb-7 w-full text-center text-2xl font-bold text-orange-400'>\n              Save a tree\n            </h2>\n\n            <form onSubmit={handleSubmit}>\n              <div className='mb-6'>\n                <label\n                  htmlFor='treeName'\n                  className='mb-1 block text-sm font-semibold'\n                >\n                  Tree name\n                </label>\n                <div className='relative'>\n                  <input\n                    type='text'\n                    id='treeName'\n                    required\n                    value={treeName}\n                    onChange={event => {\n                      setTreeName(event.target.value)\n                    }}\n                    placeholder='Untitled tree'\n                    className='peer w-full rounded bg-zinc-800 p-2.5 pl-10 placeholder:text-zinc-500 focus-visible:outline-none focus-visible:ring-0'\n                  />\n                  <FaSitemap className='absolute top-1/2 left-0 flex h-7 w-7 -translate-y-1/2 items-center border-transparent pl-3 text-zinc-600 focus:border-transparent focus:outline-none focus:ring-0 peer-valid:text-sky-500' />\n                </div>\n              </div>\n              <div className='mb-6'>\n                <FileExplorer\n                  initialDir={savedBuilds}\n                  onPathChange={onPathChange}\n                  onSelectItem={onSelectItem}\n                />\n              </div>\n              <div className='flex justify-end'>\n                <button\n                  type='button'\n                  onClick={() => toggle()}\n                  className='mr-3 cursor-pointer rounded border-zinc-800 py-1.5 px-7 font-bold text-zinc-500 hover:bg-stone-800 hover:text-orange-400'\n                >\n                  Close\n                </button>\n                <button\n                  type='submit'\n                  disabled={!treeName}\n                  className='flex cursor-pointer items-center rounded bg-lime-900 py-1 pr-10 pl-8 font-bold text-lime-100 hover:bg-lime-800 hover:text-lime-100 disabled:cursor-not-allowed disabled:opacity-40'\n                >\n                  <FaSave className='mr-2 inline' />\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>,\n        document.body\n      )\n    : null\n}\n\nexport default SaveTreeModal\n","import {\n  LeagueGroupedModifiers,\n  GLOBAL_SKILL_MODIFIER_LOOKUP,\n  Modifiers\n} from 'data/skillModifiers'\nimport { SkillTreeContext } from 'pages/AtlasSkillTree'\nimport React from 'react'\nimport toast from 'react-hot-toast'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport {\n  FaChevronCircleLeft,\n  FaChevronCircleRight,\n  FaChevronRight\n} from 'react-icons/fa'\nimport { CgImport, CgExport } from 'react-icons/cg'\nimport { useParams, usePrompt } from 'react-router-dom'\nimport reactStringReplace from 'react-string-replace'\nimport {\n  emitEvent,\n  importTree,\n  useEventListener,\n  useForceUpdate,\n  useModal\n} from 'utils'\nimport { leagueToIconsLookup } from '../constants'\nimport ExportTreeModal from './modals/ExportTreeModal'\nimport ImportTreeModal from './modals/ImportTreeModal'\nimport LoadTreeModal from './modals/LoadTreeModal'\nimport NotSavedConfirmationModal from './modals/NotSavedConfirmationModal'\nimport SaveTreeModal from './modals/SaveTreeModal'\nimport { Badge } from './ui/Badge'\nimport ToastContainer from './ui/ToastContainer'\nimport logo from '../assets/icons/icon.png'\nimport p from '../../package.json'\n\nconst TreeSummary: React.FC = () => {\n  const [collapsed, setCollapsed] = React.useState<boolean>(false)\n  const skillTreeManager = React.useContext(SkillTreeContext)\n  const [allocatedNodes, setAllocatedNodes] = React.useState<number[]>([])\n  const [saveCallback, setSaveCallback] = React.useState<Function>()\n  const [filterValue, setFilterValue] = React.useState<string>()\n\n  const { isShowing: showImportModal, toggle: toggleImportModal } = useModal()\n  const { isShowing: showExportModal, toggle: toggleExportModal } = useModal()\n  const { isShowing: showSaveModal, toggle: toggleSaveModal } = useModal()\n  const { isShowing: showLoadModal, toggle: toggleLoadModal } = useModal()\n  const { isShowing: showConfirmationModal, toggle: toggleConfirmationModal } =\n    useModal()\n\n  const [leagueGroupedModifiers, setLeagueGroupedModifiers] =\n    React.useState<LeagueGroupedModifiers>({})\n\n  useEventListener('allocated-changed', (allocated: number[]) => {\n    setAllocatedNodes(allocated)\n  })\n  const forceUpdate = useForceUpdate()\n\n  const getLeagueFromIcon = (icon: string): string => {\n    const filename = icon.split('\\\\').pop()?.split('/').pop()\n    const iconName = filename?.substring(0, filename.lastIndexOf('.'))\n    for (const [leagueName, icons] of Object.entries(leagueToIconsLookup)) {\n      if (!iconName) continue\n      if (icons.includes(iconName)) {\n        return leagueName\n      }\n    }\n    return 'N/A'\n  }\n\n  React.useEffect(() => {\n    if (allocatedNodes.length === 0) return\n    const allocatedNodeInfo = []\n    const globalModifiersToApply: string[] = []\n    for (const nodeInfo of skillTreeManager\n      .filterNodes(x => allocatedNodes.includes(x.skill))\n      .map(x => ({\n        ...x,\n        league: getLeagueFromIcon(x.icon)\n      }))) {\n      allocatedNodeInfo.push(nodeInfo)\n      const skillStr = nodeInfo.skill.toString()\n      if (\n        !globalModifiersToApply.includes(skillStr) &&\n        Object.keys(GLOBAL_SKILL_MODIFIER_LOOKUP).includes(skillStr)\n      )\n        globalModifiersToApply.push(skillStr)\n    }\n\n    const updatedModsGroups: LeagueGroupedModifiers = {}\n    for (const nodeInfo of allocatedNodeInfo) {\n      const nodePatch: LeagueGroupedModifiers = {}\n      for (const x of nodeInfo.stats) {\n        const matchPercent = x.match(/\\+?(\\d*\\.?\\d+)%/)\n        const matchAdditional = x.match(/(an additional|[0-9]+ additional)/)\n        const matchPlusFlat = x.match(/\\+(\\d*\\.?\\d+)/)\n        const matchFlat = x.match(/(\\d*\\.?\\d+)/)\n        if (!Object.keys(nodePatch).includes(nodeInfo.league))\n          nodePatch[nodeInfo.league] = {}\n\n        if (matchPercent) {\n          const generic = x.replace(/(\\+?)(\\d*\\.?\\d+)%/, '$1#%')\n          const extractedValue = Number.parseFloat(matchPercent[0])\n          if (!Object.keys(nodePatch[nodeInfo.league]).includes(generic))\n            nodePatch[nodeInfo.league][generic] = { value: 0 }\n          nodePatch[nodeInfo.league][generic].value += extractedValue\n        } else if (matchAdditional) {\n          const generic = x.replace(\n            /(an additional|[0-9]+ additional)/,\n            '# additional'\n          )\n          const clearedValue = matchAdditional[0]\n            .replace('additional', '')\n            .trim()\n          const extractedValue = Number.parseInt(\n            clearedValue === 'an' ? '1' : clearedValue,\n            10\n          )\n          if (!Object.keys(nodePatch[nodeInfo.league]).includes(generic))\n            nodePatch[nodeInfo.league][generic] = { value: 0 }\n          nodePatch[nodeInfo.league][generic].value += extractedValue\n        } else if (matchPlusFlat) {\n          const generic = x.replace(/\\+(\\d*\\.?\\d+)/, '+#')\n          const extractedValue = Number.parseFloat(matchPlusFlat[0])\n          if (!Object.keys(nodePatch[nodeInfo.league]).includes(generic))\n            nodePatch[nodeInfo.league][generic] = { value: 0 }\n          nodePatch[nodeInfo.league][generic].value += extractedValue\n        } else if (matchFlat) {\n          const generic = x.replace(/(\\d*\\.?\\d+)/, '#')\n          const extractedValue = Number.parseFloat(matchFlat[0])\n          if (!Object.keys(nodePatch[nodeInfo.league]).includes(generic))\n            nodePatch[nodeInfo.league][generic] = { value: 0 }\n          nodePatch[nodeInfo.league][generic].value += extractedValue\n        } else {\n          // No match, must be non-scalable modifier\n          const generic = x\n          if (!Object.keys(nodePatch[nodeInfo.league]).includes(generic))\n            nodePatch[nodeInfo.league][generic] = { value: 1 }\n        }\n      }\n\n      let copiedNodePatch = { ...nodePatch }\n      for (const modifier of globalModifiersToApply) {\n        copiedNodePatch = GLOBAL_SKILL_MODIFIER_LOOKUP[modifier](\n          nodeInfo,\n          copiedNodePatch\n        )\n      }\n\n      for (const [league, mods] of Object.entries(copiedNodePatch)) {\n        if (!updatedModsGroups[league]) updatedModsGroups[league] = {}\n        for (const [modName, value] of Object.entries(mods)) {\n          if (!updatedModsGroups[league][modName])\n            updatedModsGroups[league][modName] = value\n          else updatedModsGroups[league][modName].value += value.value\n        }\n      }\n    }\n    setLeagueGroupedModifiers(updatedModsGroups)\n  }, [allocatedNodes, skillTreeManager])\n\n  const onHandleSave = () => {\n    if (!skillTreeManager.name) {\n      toggleSaveModal()\n    } else {\n      skillTreeManager.saveCurrentTree()\n    }\n    forceUpdate()\n  }\n\n  const onHandleReset = (): void => {\n    setAllocatedNodes([])\n    setLeagueGroupedModifiers({})\n    skillTreeManager.name = undefined\n    skillTreeManager.path = []\n    skillTreeManager.initialAllocated = []\n    forceUpdate()\n    setSaveCallback(undefined)\n    emitEvent('reset-tree')\n  }\n\n  useHotkeys(\n    'ctrl+s',\n    event => {\n      event.stopPropagation()\n      event.preventDefault()\n      onHandleSave()\n    },\n    [onHandleSave]\n  )\n\n  const onClickSummary = (): void => setCollapsed(!collapsed)\n  const onClickNew = () => {\n    if (!skillTreeManager.isDirty()) {\n      onHandleReset()\n      return\n    }\n    toggleConfirmationModal()\n  }\n  const onClickLoad = () => {\n    toggleLoadModal()\n  }\n\n  const handleSaveProject = (callback: Function) => {\n    if (skillTreeManager.name) {\n      skillTreeManager.saveCurrentTree()\n      callback()\n      return\n    }\n    setSaveCallback(() => callback)\n    toggleSaveModal()\n    forceUpdate()\n  }\n\n  useHotkeys(\n    'ctrl+n',\n    event => {\n      event.stopPropagation()\n      event.preventDefault()\n      onClickNew()\n    },\n    [onClickNew]\n  )\n\n  usePrompt(\n    'You have unsaved changes ! Do you still wish to leave ?',\n    skillTreeManager.isDirty()\n  )\n\n  React.useEffect(() => {\n    if (skillTreeManager.isDirty()) {\n      if (!document.title.startsWith('•'))\n        document.title = `• ${document.title}`\n    } else {\n      if (document.title.startsWith('•'))\n        document.title = document.title.slice(2)\n    }\n  }, [skillTreeManager, skillTreeManager.isDirty()])\n\n  React.useEffect(() => {\n    document.title = `${\n      skillTreeManager.name ?? 'Untitled Tree'\n    } - POE Atlas Builder`\n  }, [skillTreeManager.name])\n\n  const filterLeagues = React.useCallback(\n    ([, modifiers]: [string, Modifiers]): boolean => {\n      if (!filterValue) return true\n      return Object.keys(modifiers).some(\n        x =>\n          x.toLowerCase().trim().indexOf(filterValue.toLowerCase().trim()) > -1\n      )\n    },\n    [filterValue]\n  )\n\n  const onClickExport = async (): Promise<void> => {\n    const result = skillTreeManager.exportTree()\n    await navigator.clipboard.writeText(result)\n    toast.custom(t => (\n      <ToastContainer\n        t={t}\n        variant='success'\n        message={'The tree has been exported to your clipboard !'}\n      />\n    ))\n  }\n\n  return (\n    <>\n      <ExportTreeModal show={showExportModal} toggle={toggleExportModal} />\n      <ImportTreeModal show={showImportModal} toggle={toggleImportModal} />\n      <SaveTreeModal\n        show={showSaveModal}\n        toggle={toggleSaveModal}\n        callback={saveCallback}\n      />\n      <LoadTreeModal show={showLoadModal} toggle={toggleLoadModal} />\n      <NotSavedConfirmationModal\n        show={showConfirmationModal}\n        toggle={toggleConfirmationModal}\n        onDiscardCallback={onHandleReset}\n        onSaveCallback={handleSaveProject}\n      />\n      <div\n        className={`absolute top-0 z-20 h-full w-[32rem] transition-transform ease-in-out ${\n          collapsed ? '-translate-x-[32rem]' : ''\n        }`}\n      >\n        <div className='flex h-full w-[32rem] shrink flex-col bg-zinc-900 text-slate-400'>\n          <div className='flex items-center justify-center py-3'>\n            <img src={logo} className='w-10' alt='POE Atlas Builder' />\n            <h1 className='font-serif ml-3 text-xl font-bold text-zinc-200'>\n              POE Atlas Builder\n              <small className='ml-2 text-slate-500'>v{p.version}</small>\n            </h1>\n          </div>\n          <div className='flex flex-col items-center justify-center p-3'>\n            <span className='text-sm font-bold uppercase italic text-slate-600'>\n              Current Build\n            </span>\n            <div className='flex items-center justify-center'>\n              {(!skillTreeManager.name || skillTreeManager.isDirty()) && (\n                <i className='mr-1 h-2 w-2 rounded-full bg-red-600' />\n              )}\n              <h1 className='text-2xl font-semibold text-orange-400'>\n                {skillTreeManager.name ?? (\n                  <span className='italic'>Untitled tree</span>\n                )}\n              </h1>\n            </div>\n          </div>\n          <div className='grid grid-cols-3 gap-3 px-5'>\n            <button\n              type='button'\n              disabled={allocatedNodes.length === 0}\n              className='cursor-pointer rounded bg-zinc-800 py-1 font-bold text-zinc-500 hover:bg-stone-800 hover:text-orange-400 disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:bg-zinc-800 disabled:hover:text-zinc-500'\n              onClick={onClickNew}\n            >\n              New\n            </button>\n            <button\n              type='button'\n              disabled={allocatedNodes.length === 0}\n              className='cursor-pointer rounded bg-zinc-800 py-1 font-bold text-zinc-500 hover:bg-stone-800 hover:text-orange-400 disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:bg-zinc-800 disabled:hover:text-zinc-500'\n              onClick={onHandleSave}\n            >\n              Save\n            </button>\n            <button\n              type='button'\n              className='cursor-pointer rounded bg-zinc-800 py-1 font-bold text-zinc-500 hover:bg-stone-800 hover:text-orange-400 disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:bg-zinc-800 disabled:hover:text-zinc-500'\n              onClick={onClickLoad}\n            >\n              Load\n            </button>\n            <button\n              type='button'\n              disabled={allocatedNodes.length === 0}\n              className='flex cursor-pointer items-center justify-center rounded bg-zinc-800 py-1 font-bold text-zinc-500 hover:bg-stone-800 hover:text-orange-400 disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:bg-zinc-800 disabled:hover:text-zinc-500'\n              onClick={onClickExport}\n            >\n              <CgExport className='mr-2' />\n              Export\n            </button>\n            <button\n              type='button'\n              onClick={toggleImportModal}\n              className='flex cursor-pointer items-center justify-center rounded bg-zinc-800 py-1 font-bold text-zinc-500 hover:bg-stone-800 hover:text-orange-400'\n            >\n              <CgImport className='mr-2' />\n              Import\n            </button>\n            <span className='flex items-center justify-center rounded py-1 text-xs font-bold text-zinc-500'>\n              Atlas version:{' '}\n              <Badge className='ml-2 bg-slate-700 text-slate-100'>3.18.0</Badge>\n            </span>\n          </div>\n          <div className='p-3'>\n            <h3 className='mt-3 mb-3 w-full text-center text-sm font-bold uppercase text-orange-400 text-opacity-70'>\n              Current modifiers\n            </h3>\n            <input\n              type='text'\n              value={filterValue}\n              placeholder='Search for modifiers...'\n              className='mb-5 w-full  rounded bg-zinc-800 px-2.5 py-1.5 text-sm placeholder:text-zinc-500 focus-visible:outline-none focus-visible:ring-0'\n              onChange={e => setFilterValue(e.target.value)}\n            />\n            <ul className='h-full overflow-y-auto'>\n              {Object.entries(leagueGroupedModifiers)\n                .filter(x => filterLeagues(x))\n                .sort(([aLeague], [bLeague]) => aLeague.localeCompare(bLeague))\n                .map(([leagueName, modules]) => (\n                  <React.Fragment key={leagueName}>\n                    <li className='mr-1 flex items-center'>\n                      <i\n                        className={`league league--${leagueName\n                          .replace(/\\s+/g, '-')\n                          .toLowerCase()\n                          .replace('/', '-')}`}\n                      ></i>\n                      <span className='font-bold text-orange-400'>\n                        {leagueName}\n                      </span>\n                    </li>\n                    <ul className='mb-5'>\n                      {Object.entries(modules).map(\n                        ([moduleDesc, moduleValue]) => (\n                          <li\n                            className='items-top mb-1 ml-4 flex text-sm'\n                            key={moduleDesc}\n                          >\n                            <FaChevronRight className='mt-1 mr-1 inline text-orange-400 text-opacity-70' />\n                            <span>\n                              {reactStringReplace(moduleDesc, '#', () => {\n                                return (\n                                  <span\n                                    key={moduleDesc}\n                                    className='font-bold text-sky-500'\n                                  >\n                                    {moduleValue.value}\n                                  </span>\n                                )\n                              })}\n                              {moduleValue.source && (\n                                <Badge className='ml-3 bg-zinc-800 text-zinc-300'>\n                                  {moduleValue.source}\n                                </Badge>\n                              )}\n                            </span>\n                          </li>\n                        )\n                      )}\n                    </ul>\n                  </React.Fragment>\n                ))}\n            </ul>\n          </div>\n        </div>\n        <button\n          type='button'\n          className='absolute top-0 -right-36 flex h-10 w-36 shrink-0 items-center justify-center rounded-br-lg bg-zinc-900 text-orange-400 hover:text-orange-300'\n          onClick={onClickSummary}\n        >\n          <p className='text flex items-center text-center font-bold tracking-wider'>\n            {collapsed && (\n              <FaChevronCircleRight className='mr-2 text-orange-300' />\n            )}\n            {!collapsed && (\n              <FaChevronCircleLeft className='mr-2 text-orange-300' />\n            )}\n            SUMMARY\n          </p>\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default TreeSummary\n","import type TreeNode from 'models/nodes'\nimport type { NodeContainer } from 'models/nodes'\nimport { useMemo } from 'react'\nimport {\n  base64URLEncode,\n  setFromPath,\n  UInt16ToBytes,\n  UInt32ToBytes,\n  updateObject\n} from 'utils'\n\nclass SkillTreeManager {\n  private readonly nodes: NodeContainer\n  public name?: string = undefined\n  public path: string[] = []\n  public initialAllocated: number[] = []\n\n  public constructor(nodes: NodeContainer) {\n    this.nodes = nodes\n    this.initialAllocated = [29045]\n  }\n\n  public findNode(predicate: (x: TreeNode) => unknown): TreeNode | undefined {\n    return this.toArray().find(element => predicate(element))\n  }\n\n  public anyNode(predicate: (x: TreeNode) => unknown): boolean {\n    return this.toArray().some(element => predicate(element))\n  }\n\n  public getNodes(): NodeContainer {\n    return this.nodes\n  }\n\n  public filterNodes(predicate: (x: TreeNode) => unknown): TreeNode[] {\n    return this.toArray().filter(element => predicate(element))\n  }\n\n  public toArray(): TreeNode[] {\n    return Object.values(this.nodes)\n  }\n\n  public getNode(skill: number): TreeNode {\n    if (!(skill in this.nodes)) throw new Error(`Skill not found: ${skill}`)\n    return this.nodes[skill]\n  }\n\n  public setNode(node: TreeNode): void {\n    if (!(node.skill in this.nodes)) throw new Error('Skill not found !')\n    this.nodes[node.skill] = node\n  }\n\n  public updateNode(skill: number, updated: Partial<TreeNode>): void {\n    if (!(skill in this.nodes)) throw new Error('Skill not found !')\n    this.nodes[skill] = updateObject(this.nodes[skill], updated)\n  }\n\n  public allocateSkill(skill: number): void {\n    if (!(skill in this.nodes)) throw new Error('Skill not found !')\n    this.nodes[skill].allocated = 1\n  }\n\n  public unallocateSkill(skill: number): void {\n    if (!(skill in this.nodes)) throw new Error('Skill not found !')\n    this.nodes[skill].allocated = 0\n  }\n\n  public getAllocatedSkills(): number[] {\n    return Object.values(this.nodes)\n      .filter(x => x.allocated === 1)\n      .map(x => x.skill)\n  }\n\n  public setAllocatedSkills(skills: number[]) {\n    for (const node of this.toArray()) {\n      this.nodes[node.skill].allocated = 0\n    }\n    for (const skill in skills) {\n      this.nodes[skill].allocated = 1\n    }\n  }\n\n  public saveCurrentTree(): void {\n    if (!this.name) return\n    let savesStr = localStorage.getItem('saved-trees')\n    if (!savesStr) savesStr = '{}'\n    const saves = JSON.parse(savesStr)\n    setFromPath(saves, [...this.path, this.name], this.getAllocatedSkills())\n    localStorage.setItem('saved-trees', JSON.stringify(saves))\n    this.initialAllocated = this.getAllocatedSkills()\n  }\n\n  public isDirty(): boolean {\n    const initial = this.initialAllocated\n    const updated = this.getAllocatedSkills()\n    return (\n      initial.length !== updated.length ||\n      !initial.every((value, index) => value === updated[index])\n    )\n  }\n\n  public exportTree(): string {\n    const concatedNodes = []\n\n    for (const bytes of this.getAllocatedSkills()\n      .filter(x => x !== 29_045)\n      .sort((a, b) => a - b)\n      .map(x => UInt16ToBytes(x))) {\n      concatedNodes.push(...bytes)\n    }\n    // eslint-disable-next-line no-bitwise\n    const concated = [\n      ...UInt32ToBytes(6),\n      0,\n      0,\n      this.getAllocatedSkills().length - 1,\n      ...concatedNodes,\n      0,\n      0\n    ]\n    return base64URLEncode(concated)\n  }\n}\n\nexport const useSkillTreeManager = (\n  baseNodes: NodeContainer\n): SkillTreeManager => {\n  const instance = useMemo(() => new SkillTreeManager(baseNodes), [baseNodes])\n  return instance\n}\n\nexport interface SkillTreeDirectory {\n  [name: string]: this | number[]\n}\n\nexport default SkillTreeManager\n","import TreeSummary from 'components/TreeSummary'\nimport SkillTreeManager from 'data/skillTreeManager'\nimport tree from 'data/tree.json'\nimport type Connector from 'models/connector'\nimport type TreeGroup from 'models/groups'\nimport { State } from 'models/misc'\nimport type { NodeContainer } from 'models/nodes'\nimport type PassiveTree from 'models/tree'\nimport React, { lazy } from 'react'\nimport { orbitAngles, orbitRadii } from '../constants'\n\nconst PassiveTreeRenderer = lazy(\n  async () => import('components/PassiveTreeRenderer')\n)\n\nexport const SkillTreeContext = React.createContext(new SkillTreeManager([]))\n\nconst AtlasSkillTree: React.FC = () => {\n  const [connectors, setConnectors] = React.useState<Connector[]>([])\n  const [groups, setGroups] = React.useState<Record<string, TreeGroup>>({})\n  const [nodes, setNodes] = React.useState<NodeContainer>({})\n  const [passiveTree, setPassiveTree] = React.useState<PassiveTree>()\n  const [isAppReady, setAppReady] = React.useState<boolean>(false)\n\n  const skillTreeManager = React.useMemo(\n    () => new SkillTreeManager(nodes),\n    [nodes]\n  )\n\n  React.useEffect(() => {\n    if (isAppReady) return\n    const data = tree as PassiveTree\n    const filteredNodes = Object.fromEntries(\n      Object.entries(data.nodes).filter(\n        ([, value]) => value.group && value.skill && !value.isProxy\n      )\n    ) as NodeContainer\n\n    // Nodes\n    for (const node of Object.values(filteredNodes)) {\n      const group = data.groups[node.group.toString()]\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const extra: any = {}\n      node.path = []\n      node.pathDistance = 0\n      node.isDependencyOf = []\n      node.allocated = 0\n      node.visited = false\n      extra.angle = (orbitAngles[node.orbit][node.orbitIndex] * Math.PI) / 180\n      extra.posX = group.x - orbitRadii[node.orbit] * Math.sin(-extra.angle)\n      extra.posY = group.y - orbitRadii[node.orbit] * Math.cos(-extra.angle)\n\n      if (node.group === 0) {\n        extra.posX = 0\n        extra.posY = 0\n      }\n      node.extra = extra\n      node.state = State.DEFAULT\n      if (node.skill === 29_045) {\n        node.isStartPoint = true\n        node.allocated = 1\n        node.hidden = true\n        node.state = State.ACTIVE\n      }\n    }\n\n    // Connectors\n    const initConnectors: Connector[] = []\n    for (const node of Object.values(filteredNodes)) {\n      for (const nodeString of node.out) {\n        const otherNode = filteredNodes[Number.parseInt(nodeString, 10)]\n        if (\n          initConnectors.findIndex(\n            c =>\n              (c.startNode === node.skill && c.endNode === otherNode.skill) ||\n              (c.endNode === node.skill && c.startNode === otherNode.skill)\n          ) !== -1\n        )\n          continue\n        const type =\n          node.group === otherNode.group && node.orbit === otherNode.orbit\n            ? 'circle'\n            : 'line'\n        const connector = {\n          id: `${node.skill}/${otherNode.skill}`,\n          endNode: otherNode.skill,\n          startNode: node.skill,\n          type,\n          state: node.allocated\n            ? otherNode.allocated\n              ? State.ACTIVE\n              : State.INTERMEDIATE\n            : State.DEFAULT\n        }\n        initConnectors.push(connector)\n      }\n    }\n\n    // Final tweaks: default allocated, etc...\n    for (const n of Object.values(filteredNodes).filter(x1 =>\n      data.nodes.root.out?.some(x2 => x2 === x1.skill.toString())\n    )) {\n      n.allocated = 1\n      n.state = State.ACTIVE\n      for (const n1 of Object.values(filteredNodes).filter(n2 =>\n        n.out.includes(n2.skill.toString())\n      )) {\n        n1.canAllocate = true\n        n1.state = State.INTERMEDIATE\n      }\n    }\n\n    setPassiveTree(data)\n    setGroups(data.groups)\n    setNodes(filteredNodes)\n    setConnectors(initConnectors)\n    setAppReady(true)\n  }, [tree, isAppReady])\n\n  return (\n    <SkillTreeContext.Provider value={skillTreeManager}>\n      <TreeSummary />\n      {isAppReady && passiveTree !== undefined && (\n        <PassiveTreeRenderer\n          connectors={connectors}\n          groups={groups}\n          jsonTree={passiveTree}\n        />\n      )}\n    </SkillTreeContext.Provider>\n  )\n}\n\nexport default AtlasSkillTree\n","import { ATLAS_TREE_POE_VERSION } from './constants'\nimport type { NodeContainer } from 'models/nodes'\nimport { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport { State } from './models/misc'\n\n// eslint-disable-next-line import/prefer-default-export\nexport function useMediaQuery(query: string): boolean {\n  const [matches, setMatches] = useState(() => matchMedia(query).matches)\n\n  useLayoutEffect(() => {\n    const mediaQuery = matchMedia(query)\n\n    function onMediaQueryChange(): void {\n      setMatches(mediaQuery.matches)\n    }\n\n    mediaQuery.addEventListener('change', onMediaQueryChange)\n\n    return (): void => {\n      mediaQuery.removeEventListener('change', onMediaQueryChange)\n    }\n  }, [query])\n\n  return matches\n}\n\n/* eslint-disable no-bitwise */\nconst stringToBytes = (input: string): number[] => {\n  let result: number[] = []\n  for (let index = 0; index < input.length; index += 1) {\n    let char = input.codePointAt(index)\n    if (char === undefined) return [0]\n    const st = []\n    do {\n      st.push(char & 0xff)\n      char >>= 8\n    } while (char)\n    result = [...result, ...st]\n  }\n  return result\n}\n\nexport const base64URLDecode = (input: string): number[] => {\n  let result = input.replaceAll('-', '+').replaceAll('_', '/')\n  const pad = input.length % 4\n  if (pad) {\n    if (pad === 1) throw new Error('Invalid input !')\n    result += Array.from({ length: 5 - pad }).join('=')\n  }\n  return stringToBytes(window.atob(result))\n}\n\nexport function useForceUpdate(): () => void {\n  const setValue = useState(0)[1]\n  return useRef(() => setValue(v => v + 1)).current\n}\n\nconst bytesToString = (input: number[]): string =>\n  input\n    .map(x => String.fromCodePoint(x))\n    .reduce((previous, current) => previous + current)\n\nexport const base64URLEncode = (input: number[]): string => {\n  let b64 = window.btoa(bytesToString(input))\n  b64 = b64.replaceAll('+', '-').replace(/\\//g, '_')\n  return b64\n}\n\nexport const UInt32ToBytes = (input: number): number[] => {\n  const array = Array.from<number>({ length: 4 })\n\n  array[0] = input & 0xff\n  array[1] = (input >> 8) & 0xff\n  array[2] = (input >> 16) & 0xff\n  array[3] = (input >> 24) & 0xff\n\n  return array.reverse()\n}\n\nexport const UInt16ToBytes = (input: number): number[] => {\n  const array = Array.from<number>({ length: 2 })\n\n  array[0] = input & 0xff\n  array[1] = (input >> 8) & 0xff\n\n  return array.reverse()\n}\n\nexport const toUInt32 = (bytes: number[]): number => {\n  let result = 0\n  if (bytes.length % 4 !== 0)\n    throw new Error(`Invalid bytes length: ${bytes.length}`)\n  for (let index = 0; index < bytes.length; index += 4) {\n    result |= bytes[index % 4] << 24\n    result |= bytes[(index % 4) + 1] << 16\n    result |= bytes[(index % 4) + 2] << 8\n    result |= bytes[(index % 4) + 3]\n  }\n  return result\n}\n\nexport const toUInt16 = (bytes: number[]): number => {\n  let result = 0\n  if (bytes.length % 2 !== 0)\n    throw new Error(`Invalid bytes length: ${bytes.length}`)\n  for (let index = 0; index < bytes.length; index += 2) {\n    result |= bytes[index % 2] << 8\n    result |= bytes[(index % 2) + 1]\n  }\n  return result\n}\n\nexport default { base64URLDecode }\n\nexport function useEventListener<T>(\n  eventName: string,\n  eventHandler: (data: T) => void\n): void {\n  useEffect(() => {\n    const handleEvent = (event: CustomEvent<T> | Event): void => {\n      const data = (event as CustomEvent<T>).detail\n      eventHandler(data)\n    }\n\n    document.addEventListener(eventName, handleEvent, false)\n\n    return () => {\n      document.removeEventListener(eventName, handleEvent, false)\n    }\n  })\n}\n\nexport function emitEvent<T>(eventName: string, data?: T): void {\n  const event = new CustomEvent(eventName, { detail: data })\n  document.dispatchEvent(event)\n}\n\nexport const stateToString = (state?: State, canAllocate?: boolean): string => {\n  if (state === undefined) return 'unallocated'\n  if (state === State.INTERMEDIATE) return 'highlighted'\n  if (state === State.ACTIVE) return 'active'\n  if (canAllocate) return 'highlighted'\n  return 'unallocated'\n}\n\n/**\n * Adapted from PathOfBuilding\n * https://github.com/PathOfBuildingCommunity/PathOfBuilding/blob/b8efa6a40ec2db702009c0e7a1d8abed8b0c0346/src/Classes/PassiveTree.lua#L36\n * @param skillsPerOrbit\n */\nexport function calculateOrbitAngles(\n  skillsPerOrbit: number[]\n): Record<number, number[]> {\n  const orbitAngles: Record<number, number[]> = {}\n  for (const [orbitIndex, skillsInOrbit] of skillsPerOrbit.entries()) {\n    if (skillsInOrbit === 16) {\n      orbitAngles[orbitIndex] = [\n        0, 30, 45, 60, 90, 120, 135, 150, 180, 210, 225, 240, 270, 300, 315, 330\n      ]\n    } else if (skillsInOrbit === 40) {\n      orbitAngles[orbitIndex] = [\n        0, 10, 20, 30, 40, 45, 50, 60, 70, 80, 90, 100, 110, 120, 130, 135, 140,\n        150, 160, 170, 180, 190, 200, 210, 220, 225, 230, 240, 250, 260, 270,\n        280, 290, 300, 310, 315, 320, 330, 340, 350\n      ]\n    } else {\n      orbitAngles[orbitIndex] = []\n      for (let index = 0; index < skillsInOrbit; index += 1) {\n        orbitAngles[orbitIndex][index] = (360 * index) / skillsInOrbit\n      }\n    }\n  }\n\n  return orbitAngles\n}\n\nexport function updateObject<T>(\n  oldObject: T,\n  updatedProperties: Partial<T>\n): T {\n  for (const [key, value] of Object.entries(updatedProperties)) {\n    if (value === undefined) continue\n    oldObject[key as keyof T] = value as T[keyof T]\n  }\n\n  return oldObject\n}\n\nexport function findStartFromNode(\n  from: number,\n  searchIn: NodeContainer,\n  visited: Set<number>\n): boolean {\n  visited.add(from)\n  const node = searchIn[from]\n  node.visited = true\n  const linked = [...node.out, ...node.in]\n    .filter(o => Number.parseInt(o, 10) in searchIn)\n    .map(o => searchIn[Number.parseInt(o, 10)])\n  return linked.some(other => {\n    if (visited.has(other.skill)) return false\n    if (other.visited) return false\n    if (other.isStartPoint) return true\n    return findStartFromNode(other.skill, searchIn, visited)\n  })\n}\n\ntype History = {\n  past: number[][]\n  present: number[]\n  future: number[][]\n}\n\nexport const addToHistory = (allocated: number[]) => {\n  const currentHistoryStr = localStorage.getItem('tree-history')\n  let currentHistory: History\n  if (!currentHistoryStr) currentHistory = { past: [], present: [], future: [] }\n  else currentHistory = JSON.parse(currentHistoryStr)\n  currentHistory.past.push(currentHistory.present)\n  currentHistory.present = allocated\n  localStorage.setItem('tree-history', JSON.stringify(currentHistory))\n}\n\nexport const undoHistory = (): number[] => {\n  const currentHistoryStr = localStorage.getItem('tree-history')\n  if (!currentHistoryStr) return []\n  const currentHistory: History = JSON.parse(currentHistoryStr)\n  let latest = currentHistory.past.pop()\n  if (!latest) latest = []\n  const future = currentHistory.present\n  currentHistory.present = latest\n  currentHistory.future.push(future)\n  localStorage.setItem('tree-history', JSON.stringify(currentHistory))\n  return latest\n}\n\nexport const redoHistory = (): number[] => {\n  const currentHistoryStr = localStorage.getItem('tree-history')\n  if (!currentHistoryStr) return []\n  const currentHistory: History = JSON.parse(currentHistoryStr)\n  let latest = currentHistory.future.pop()\n  if (!latest) return []\n  const past = currentHistory.present\n  currentHistory.present = latest\n  currentHistory.past.push(past)\n  localStorage.setItem('tree-history', JSON.stringify(currentHistory))\n  return latest\n}\n\nexport const useModal = () => {\n  const [isShowing, setIsShowing] = useState(false)\n\n  function toggle() {\n    setIsShowing(!isShowing)\n  }\n\n  return {\n    isShowing,\n    toggle\n  }\n}\n\nexport const getFromPath = <T>(obj: any, path: string[]): T => {\n  if (path.length === 0) return obj\n  if (path.length === 1) return obj[path[0]]\n  if (!obj[path[0]]) return obj\n  return getFromPath(obj[path[0]], path.slice(1))\n}\n\nexport const setFromPath = (obj: any, path: string[], value?: any) => {\n  for (let i = 0; i <= path.length - 2; i++) {\n    if (!obj[path[i]]) obj[path[i]] = {}\n    obj = obj[path[i]]\n  }\n  if (!value) delete obj[path[path.length - 1]]\n  else obj[path[path.length - 1]] = value\n}\n\nexport const useOutsideClick = (ref: any, callback: Function) => {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event: MouseEvent) {\n      if (\n        ref.current &&\n        !ref.current.contains(event.target) &&\n        !(event.target instanceof HTMLButtonElement)\n      ) {\n        callback()\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [ref, callback])\n}\n\nexport const importTree = (encodedTree?: string) => {\n  if (!encodedTree) throw new Error('The tree you provided is invalid.')\n  const decoded = base64URLDecode(encodedTree)\n  let version = 0\n  try {\n    version = toUInt32(decoded.slice(0, 4))\n  } catch (e) {\n    console.error(e)\n    throw new Error('The tree you provided is invalid.')\n  }\n  const decodedClass = decoded[4]\n  const ascendancy = decoded[5]\n  if (version !== ATLAS_TREE_POE_VERSION)\n    throw new Error('The provided tree is either too old or not compatible.')\n  if (decodedClass > 0 || ascendancy > 0)\n    throw new Error('The provided tree is not an Atlas Skill tree.')\n  const nodesCount = decoded[6]\n  const decodedNodes = []\n  let cursor = 7\n  for (let index = 0; index < nodesCount; index += 1) {\n    let node = 0\n    try {\n      node = toUInt16(decoded.slice(cursor, cursor + 2))\n    } catch {\n      throw new Error('The tree you provided is invalid.')\n    }\n    decodedNodes.push(node)\n    cursor += 2\n  }\n  emitEvent('import-tree', decodedNodes)\n}\n"],"names":["orbitAngles","calculateOrbitAngles","orbitRadii","TOOLTIP_HEADER_HEIGHT","ATLAS_TREE_POE_VERSION","getNodeFrameInfo","node","jsonTree","isNotable","width","height","innerRadius","skillAtlas","skillSprites","notableInactive","isKeystone","keystoneInactive","normalInactive","leagueToIconsLookup","Abyss","Incursion","Anarchy","Ascendancy","Bestiary","Beyond","Blight","Breach","Conqueror","Delirium","Delve","Essence","Expedition","Domination","Harbinger","Harvest","Heist","Betrayal","Kirac","Legion","Maps","Misc","Rare","Metamorph","Ritual","Scarabs","Sextants","Ambush","Synthesis","Torment","Vaal","State","GlobalModifiers","GLOBAL_SKILL_MODIFIER_LOOKUP","modifiers","updatedMaps","updatedMisc","isStartPoint","name","GRAND_DESIGN1","value","source","GRAND_DESIGN2","WANDERING_PATH","effectKey","Object","keys","effectValue","values","effect","entries","league","mods","modName","includes","t","message","variant","title","getTitle","React","getBgClasses","getMessageClasses","getTitleClasses","getIconClasses","className","visible","show","toggle","skillTreeManager","useContext","SkillTreeContext","onClickRaw","result","exportTree","navigator","clipboard","writeText","toast","onClickPastebin","formData","URLSearchParams","append","process","axios","response","console","log","data","createPortal","onClick","role","type","document","body","showError","textareaText","setTextareaText","onChange","event","target","encodedTree","importTree","error","onHandleImport","disabled","Badge","size","children","initialDir","onSelectItem","onPathChange","selectedItem","setSelectedItem","filesWrapper","isCreating","setCreating","folderName","setFolderName","selectedClasses","defaultClasses","selectedIconClasses","defaultIconClasses","folderPrefix","currentPath","_setCurrentPath","currentView","setCurrentView","setCurrentPath","path","useOutsideClick","undefined","onClickFolder","detail","newPath","slice","length","newView","getFromPath","setFromPath","localStorage","setItem","JSON","stringify","htmlFor","hasOwnProperty","map","replace","e","ref","filter","Array","isArray","buildName","join","allocated","treeName","callback","setTreeName","savedBuilds","savesStr","getItem","parse","tree","emitEvent","initialAllocated","onSaveCallback","onDiscardCallback","handleSubmit","preventDefault","stopPropagation","saveCurrentTree","onSubmit","id","required","placeholder","collapsed","setCollapsed","allocatedNodes","setAllocatedNodes","saveCallback","setSaveCallback","filterValue","setFilterValue","useModal","showImportModal","isShowing","toggleImportModal","showExportModal","toggleExportModal","showSaveModal","toggleSaveModal","showLoadModal","toggleLoadModal","showConfirmationModal","toggleConfirmationModal","leagueGroupedModifiers","setLeagueGroupedModifiers","useEventListener","forceUpdate","useForceUpdate","getLeagueFromIcon","icon","filename","split","pop","iconName","substring","lastIndexOf","leagueName","icons","allocatedNodeInfo","globalModifiersToApply","filterNodes","x","skill","nodeInfo","push","skillStr","toString","updatedModsGroups","nodePatch","stats","matchPercent","match","matchAdditional","matchPlusFlat","matchFlat","generic","extractedValue","Number","parseFloat","clearedValue","trim","parseInt","copiedNodePatch","modifier","onHandleSave","onHandleReset","useHotkeys","onClickNew","isDirty","usePrompt","startsWith","filterLeagues","some","toLowerCase","indexOf","onClickExport","src","logo","alt","p","sort","aLeague","bLeague","localeCompare","modules","moduleDesc","moduleValue","reactStringReplace","SkillTreeManager","nodes","this","predicate","toArray","find","element","Error","updated","updateObject","skills","saves","getAllocatedSkills","initial","every","index","concatedNodes","a","b","UInt16ToBytes","bytes","concated","UInt32ToBytes","base64URLEncode","PassiveTreeRenderer","lazy","connectors","setConnectors","groups","setGroups","setNodes","passiveTree","setPassiveTree","isAppReady","setAppReady","filteredNodes","fromEntries","group","isProxy","extra","pathDistance","isDependencyOf","visited","angle","orbit","orbitIndex","Math","PI","posX","sin","posY","y","cos","state","hidden","initConnectors","out","nodeString","otherNode","findIndex","c","startNode","endNode","connector","x1","root","x2","n","n2","n1","canAllocate","Provider","base64URLDecode","input","replaceAll","pad","from","char","codePointAt","st","stringToBytes","window","atob","setValue","useState","useRef","v","current","b64","btoa","String","fromCodePoint","reduce","previous","bytesToString","array","reverse","toUInt16","eventName","eventHandler","useEffect","handleEvent","addEventListener","removeEventListener","CustomEvent","dispatchEvent","stateToString","skillsPerOrbit","skillsInOrbit","oldObject","updatedProperties","key","findStartFromNode","searchIn","add","in","o","other","has","addToHistory","currentHistory","currentHistoryStr","past","present","future","undoHistory","latest","redoHistory","setIsShowing","obj","i","handleClickOutside","contains","HTMLButtonElement","decoded","version","toUInt32","decodedClass","ascendancy","nodesCount","decodedNodes","cursor"],"sourceRoot":""}